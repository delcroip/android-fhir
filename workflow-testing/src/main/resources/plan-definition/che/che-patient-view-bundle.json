{
  "resourceType": "Bundle",
  "id": "hello-world-patient-view-bundle",
  "type": "transaction",
  "entry": [ {
    "resource": {
      "resourceType": "PlanDefinition",
      "id": "emcaredt012",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/PlanDefinition/emcaredt012",
      "identifier": [
        {
          "use": "official",
          "value": "emcaredt012"
        }
      ],
      "version": "1.0.3.build.182",
      "name": "emcaredt012",
      "title": "emcaredt012",
      "type": {
        "coding": [
          {
            "system": "http://terminology.hl7.org/CodeSystem/plan-definition-type",
            "code": "eca-rule"
          }
        ]
      },
      "status": "active",
      "experimental": false,
      "date": "2023-07-26T13:07:39+00:00",
      "library": [
        "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcaredt01|1.0.3.build.182"
      ],
      "action": [
        {
          "definitionCanonical": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/ActivityDefinition/emcareb.registration.e",
          "description": "Register the child in the encounter",
          "condition": [
            {
              "kind": "applicability",
              "expression": {
                "language": "text/cql.identifier",
                "expression": "EmCareDT02"
              }}],
            "dynamicValue": [
              {
                "path": "action.description",
                "expression": {
                  "language": "text/fhirpath",
                  "expression": "'Get Task Description'"
                }
              }
          ]
        }
      ]
    }
  },     {
    "resource": {
      "resourceType": "ActivityDefinition",
      "id": "emcareb.registration.e",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/ActivityDefinition/emcareb.registration.e",
      "status": "active",
      "kind": "Task",
      "library": [
        "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebregistratione|1.0.3.build.182"
      ],
      "dynamicValue": [
        {
          "path": "description",
          "expression": {
            "language": "text/fhirpath",
            "expression": "'test dynvalue'"
          }
        }
      ]
    }
  },


    {
    "resource": {
      "resourceType": "Library",
      "id": "emcarebregistratione",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebregistratione",
      "identifier": [
        {
          "use": "official",
          "value": "emcareb.registration.e"
        }
      ],
      "version": "1.0.3.build.182",
      "name": "emcarebregistratione",
      "title": "EmCareB.Registration.E",
      "status": "active",
      "type": {
        "coding": [
          {
            "system": "http://hl7.org/fhir/ValueSet/library-type",
            "code": "logic-library"
          }
        ]
      },
      "relatedArtifact": [
        {
          "type": "depends-on",
          "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        }
      ],
      "parameter": [
        {
          "name": "relatedpersonuuid",
          "use": "out",
          "type": "string"
        }
      ],
      "content": [
        {
          "id": "ig-loader-emcarebregistratione.cql",
          "contentType": "text/cql",
          "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZWJyZWdpc3RyYXRpb25lIHZlcnNpb24gJzEuMC4zLmJ1aWxkLjE4MicKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzIAppbmNsdWRlIGVtY2FyZWJhc2UgdmVyc2lvbiAnMS4wLjMuYnVpbGQuMTgyJyBjYWxsZWQgQmFzZQppbmNsdWRlIGVtY2FyZXZhbHVlc2V0IHZlcnNpb24gJzEuMC4zLmJ1aWxkLjE4MicgY2FsbGVkIHZhbAoKCgoKY29udGV4dCBQYXRpZW50CgoKLyogCkJhY2tSZWZlcmVuY2UgOiAKYmFjayByZWZlcmVuY2UgdG8gcmVzb3VyY2UKKi8KZGVmaW5lICJCYWNrUmVmZXJlbmNlIjoKICAgIFJlZmVyZW5jZSB7cmVmZXJlbmNlOiBzdHJpbmcgeyB2YWx1ZTogJ1F1ZXN0aW9ubmFpcmUvZW1jYXJlYi5yZWdpc3RyYXRpb24uZSd9fQo="
        }
      ]
    }
  },{
    "resource": {
      "resourceType": "Library",
      "id": "emcarebase",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir//Library/emcarebase",
      "version": "1.0.3.build.182",
      "name": "emcarebase",
      "title": "EmCareBase",
      "status": "active",
      "type": {
        "coding": [
          {
            "system": "http://hl7.org/fhir/ValueSet/library-type",
            "code": "logic-library"
          }
        ]
      },
      "relatedArtifact": [
        {
          "type": "depends-on",
          "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
      ],
      "parameter": [
        {
          "name": "encounterid",
          "use": "in",
          "type": "string"
        }
      ],
      "dataRequirement": [
        {
          "type": "Patient",
          "profile": [
            "http://hl7.org/fhir/StructureDefinition/Patient"
          ]
        },
        {
          "type": "Encounter",
          "profile": [
            "http://hl7.org/fhir/StructureDefinition/Encounter"
          ]
        }
      ],
      "content": [
        {
          "id": "ig-loader-emcarebase.cql",
          "contentType": "text/cql",
          "data": ""
        }
      ]
    }
  },{
    "resource": {
      "resourceType": "Library",
      "id": "emcaredt01",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcaredt01",
      "identifier": [
        {
          "use": "official",
          "value": "emcaredt01"
        }
      ],
      "version": "1.0.3.build.182",
      "name": "emcaredt01",
      "title": "emcaredt01",
      "status": "active",
      "type": {
        "coding": [
          {
            "system": "http://hl7.org/fhir/ValueSet/library-type",
            "code": "logic-library"
          }
        ]
      },
      "relatedArtifact": [
        {
          "type": "depends-on",
          "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        }
      ],
      "parameter": [
        {
          "name": "EmCareDT01",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Register a child < 5 years",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT02",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Register the child in the encounter",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT04",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Evaluate DangerSigns",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT03",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Determine Basic Anthropometric and others measurement",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT05",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Assess sick child for Symptoms 2 m",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT06",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Assess sick child for Symptoms 2p",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT07",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Assess sick child for Signs 2 m",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT08",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Assess sick child for Signs 2p",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT09",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Propose classification",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT10",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Do Test",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT11",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Provide treatment",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCareDT12",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Propose classification 2m",
          "use": "out",
          "type": "boolean"
        }
      ],
      "content": [
        {
          "id": "ig-loader-emcaredt01.cql",
          "contentType": "text/cql",
          "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZWR0MDEgdmVyc2lvbiAnMS4wLjMuYnVpbGQuMTgyJwp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMgCmluY2x1ZGUgZW1jYXJlYmFzZSB2ZXJzaW9uICcxLjAuMy5idWlsZC4xODInIGNhbGxlZCBCYXNlCmluY2x1ZGUgZW1jYXJldmFsdWVzZXQgdmVyc2lvbiAnMS4wLjMuYnVpbGQuMTgyJyBjYWxsZWQgdmFsCmluY2x1ZGUgZW1jYXJlY29tYmluZWRkYXRhZWxlbWVudHMgdmVyc2lvbiAnMS4wLjMuYnVpbGQuMTgyJyBjYWxsZWQgY2xhcwoKCgoKY29udGV4dCBQYXRpZW50CgoKLyogCkVtQ2FyZURUMDIgOiAKQWdlSW5ZZWFycygpIDwgNQoqLwpkZWZpbmUgIkVtQ2FyZURUMDIiOgogICAgQWdlSW5ZZWFycygpIDwgNQoKLyogClJlZ2lzdGVyIHRoZSBjaGlsZCBpbiB0aGUgZW5jb3VudGVyIDogRW1DYXJlRFQwMgpBbGlhcwoqLwpkZWZpbmUgIlJlZ2lzdGVyIHRoZSBjaGlsZCBpbiB0aGUgZW5jb3VudGVyIjoKICAgICJFbUNhcmVEVDAyIgoKLyogCkVtQ2FyZURUMDQgOiAKQWdlSW5ZZWFycygpIDwgNQoqLwpkZWZpbmUgIkVtQ2FyZURUMDQiOgogICAgQWdlSW5ZZWFycygpIDwgNQoKLyogCkV2YWx1YXRlIERhbmdlclNpZ25zIDogRW1DYXJlRFQwNApBbGlhcwoqLwpkZWZpbmUgIkV2YWx1YXRlIERhbmdlclNpZ25zIjoKICAgICJFbUNhcmVEVDA0IgoKLyogCkVtQ2FyZURUMDMgOiAKQWdlSW5ZZWFycygpIDwgNQoqLwpkZWZpbmUgIkVtQ2FyZURUMDMiOgogICAgQWdlSW5ZZWFycygpIDwgNQoKLyogCkRldGVybWluZSBCYXNpYyBBbnRocm9wb21ldHJpYyBhbmQgb3RoZXJzIG1lYXN1cmVtZW50IDogRW1DYXJlRFQwMwpBbGlhcwoqLwpkZWZpbmUgIkRldGVybWluZSBCYXNpYyBBbnRocm9wb21ldHJpYyBhbmQgb3RoZXJzIG1lYXN1cmVtZW50IjoKICAgICJFbUNhcmVEVDAzIgoKLyogCkVtQ2FyZURUMDUgOiAKQWdlSW5Nb250aHMoKSA8IDIKKi8KZGVmaW5lICJFbUNhcmVEVDA1IjoKICAgIEFnZUluTW9udGhzKCkgPCAyCgovKiAKQXNzZXNzIHNpY2sgY2hpbGQgZm9yIFN5bXB0b21zIDIgbSA6IEVtQ2FyZURUMDUKQWxpYXMKKi8KZGVmaW5lICJBc3Nlc3Mgc2ljayBjaGlsZCBmb3IgU3ltcHRvbXMgMiBtIjoKICAgICJFbUNhcmVEVDA1IgoKLyogCkVtQ2FyZURUMDYgOiAKY2xhcy4iQWdlID49IDIgbW9udGhzIHRvIDw2MCBtb250aHMiCiovCmRlZmluZSAiRW1DYXJlRFQwNiI6CiAgICBjbGFzLiJBZ2UgPj0gMiBtb250aHMgdG8gPDYwIG1vbnRocyIKCi8qIApBc3Nlc3Mgc2ljayBjaGlsZCBmb3IgU3ltcHRvbXMgMnAgOiBFbUNhcmVEVDA2CkFsaWFzCiovCmRlZmluZSAiQXNzZXNzIHNpY2sgY2hpbGQgZm9yIFN5bXB0b21zIDJwIjoKICAgICJFbUNhcmVEVDA2IgoKLyogCkVtQ2FyZURUMDcgOiAKQWdlSW5Nb250aHMoKSA8IDIKKi8KZGVmaW5lICJFbUNhcmVEVDA3IjoKICAgIEFnZUluTW9udGhzKCkgPCAyCgovKiAKQXNzZXNzIHNpY2sgY2hpbGQgZm9yIFNpZ25zIDIgbSA6IEVtQ2FyZURUMDcKQWxpYXMKKi8KZGVmaW5lICJBc3Nlc3Mgc2ljayBjaGlsZCBmb3IgU2lnbnMgMiBtIjoKICAgICJFbUNhcmVEVDA3IgoKLyogCkVtQ2FyZURUMDggOiAKY2xhcy4iQWdlID49IDIgbW9udGhzIHRvIDw2MCBtb250aHMiCiovCmRlZmluZSAiRW1DYXJlRFQwOCI6CiAgICBjbGFzLiJBZ2UgPj0gMiBtb250aHMgdG8gPDYwIG1vbnRocyIKCi8qIApBc3Nlc3Mgc2ljayBjaGlsZCBmb3IgU2lnbnMgMnAgOiBFbUNhcmVEVDA4CkFsaWFzCiovCmRlZmluZSAiQXNzZXNzIHNpY2sgY2hpbGQgZm9yIFNpZ25zIDJwIjoKICAgICJFbUNhcmVEVDA4IgoKLyogCkVtQ2FyZURUMDkgOiAKY2xhcy4iQWdlID49IDIgbW9udGhzIHRvIDw2MCBtb250aHMiCiovCmRlZmluZSAiRW1DYXJlRFQwOSI6CiAgICBjbGFzLiJBZ2UgPj0gMiBtb250aHMgdG8gPDYwIG1vbnRocyIKCi8qIApQcm9wb3NlIGNsYXNzaWZpY2F0aW9uIDogRW1DYXJlRFQwOQpBbGlhcwoqLwpkZWZpbmUgIlByb3Bvc2UgY2xhc3NpZmljYXRpb24iOgogICAgIkVtQ2FyZURUMDkiCgovKiAKRW1DYXJlRFQxMCA6IApBZ2VJblllYXJzKCkgPCA1CiovCmRlZmluZSAiRW1DYXJlRFQxMCI6CiAgICBBZ2VJblllYXJzKCkgPCA1CgovKiAKRG8gVGVzdCA6IEVtQ2FyZURUMTAKQWxpYXMKKi8KZGVmaW5lICJEbyBUZXN0IjoKICAgICJFbUNhcmVEVDEwIgoKLyogCkVtQ2FyZURUMTEgOiAKQWdlSW5ZZWFycygpIDwgNQoqLwpkZWZpbmUgIkVtQ2FyZURUMTEiOgogICAgQWdlSW5ZZWFycygpIDwgNQoKLyogClByb3ZpZGUgdHJlYXRtZW50IDogRW1DYXJlRFQxMQpBbGlhcwoqLwpkZWZpbmUgIlByb3ZpZGUgdHJlYXRtZW50IjoKICAgICJFbUNhcmVEVDExIgoKLyogCkVtQ2FyZURUMTIgOiAKQWdlSW5Nb250aHMoKSA8IDIKKi8KZGVmaW5lICJFbUNhcmVEVDEyIjoKICAgIEFnZUluTW9udGhzKCkgPCAyCgovKiAKUHJvcG9zZSBjbGFzc2lmaWNhdGlvbiAybSA6IEVtQ2FyZURUMTIKQWxpYXMKKi8KZGVmaW5lICJQcm9wb3NlIGNsYXNzaWZpY2F0aW9uIDJtIjoKICAgICJFbUNhcmVEVDEyIgo="
        }
      ]
    }
  },{
      "resource": {
        "resourceType": "Library",
        "id": "emcarevalueset",
        "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset",
        "version": "1.0.3.build.182",
        "name": "emcarevalueset",
        "status": "active",
        "type": {
          "coding": [
            {
              "system": "http://hl7.org/fhir/ValueSet/library-type",
              "code": "logic-library"
            }
          ]
        },
        "relatedArtifact": [
          {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
          }
        ],
        "content": [
          {
            "id": "ig-loader-emcarevalueset.cql",
            "contentType": "text/cql",
            "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZXZhbHVlc2V0IHZlcnNpb24gJzEuMC4zLmJ1aWxkLjE4MicKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzIAoKCgoKY29kZXN5c3RlbSAiRW1DYXJlIiA6ICdodHRwczovL2ZoaXIuZGsuc3dpc3N0cGgtbWlzLmNoL21hdGNoYm94L2ZoaXIvQ29kZVN5c3RlbS9lbWNhcmUtY3VzdG9tLWNvZGVzJwoKCmNvZGUgIkZlbWFsZSI6ICdFbUNhcmUuQS5ERTE3JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0ZlbWFsZScKY29kZSAiTWFsZSI6ICdFbUNhcmUuQS5ERTE4JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ01hbGUnCmNvZGUgIk5vdCBTcGVjaWZpZWQiOiAnRW1DYXJlLkEuREUxOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdOb3QgU3BlY2lmaWVkJwpjb2RlICJFc3RpbWF0ZSBBZ2UgLSBZZWFycy9Nb250aHMgZm9yIGEgY2hpbGQiOiAnRW1DYXJlLkEuREUxMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdFc3RpbWF0ZSBBZ2UgLSBZZWFycy9Nb250aHMgZm9yIGEgY2hpbGQnCmNvZGUgIkVzdGltYXRlIEFnZSAtIFdlZWtzL0RheXMgZm9yIHlvdW5nIGluZmFudCI6ICdFbUNhcmUuQS5ERTE0JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0VzdGltYXRlIEFnZSAtIFdlZWtzL0RheXMgZm9yIHlvdW5nIGluZmFudCcKY29kZSAiRXN0aW1hdGVkIERhdGUgb2YgQmlydGgiOiAnRW1DYXJlLkEuREUxNScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdFc3RpbWF0ZWQgRGF0ZSBvZiBCaXJ0aCcKY29kZSAiTW90aGVyIjogJ0VtQ2FyZS5BLkRFMjUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTW90aGVyJwpjb2RlICJGYXRoZXIiOiAnRW1DYXJlLkEuREUyNicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdGYXRoZXInCmNvZGUgIlNpYmxpbmciOiAnRW1DYXJlLkEuREUyNycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTaWJsaW5nJwpjb2RlICJFeHRlbmRlZCBmYW1pbHkiOiAnRW1DYXJlLkEuREUyOCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdFeHRlbmRlZCBmYW1pbHknCmNvZGUgIkxlZ2FsIEd1YXJkaWFuIjogJ0VtQ2FyZS5BLkRFMjknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTGVnYWwgR3VhcmRpYW4nCmNvZGUgIk5vdCBSZWxhdGVkIjogJ0VtQ2FyZS5BLkRFMzAnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm90IFJlbGF0ZWQnCmNvZGUgIkRlYWQiOiAnRW1DYXJlLkEuREU0NicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdEZWFkJwpjb2RlICJBbGl2ZSI6ICdFbUNhcmUuQS5ERTM0JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0FsaXZlJwpjb2RlICJQbGFubmVkIjogJ0VtQ2FyZS5CMi5ERTAyJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1BsYW5uZWQnCmNvZGUgIlVucGxhbm5lZCI6ICdFbUNhcmUuQjIuREUwMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdVbnBsYW5uZWQnCmNvZGUgIlNpY2sgQ2hpbGQiOiAnRW1DYXJlLkIzLkRFMDMnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnU2ljayBDaGlsZCcKY29kZSAiUm91dGluZSB2aXNpdCAoV2VsbCBjaGlsZC9pbmZhbnQpIjogJ0VtQ2FyZS5CMy5ERTA0JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1JvdXRpbmUgdmlzaXQgKFdlbGwgY2hpbGQvaW5mYW50KScKY29kZSAiWWVzIjogJ3llcycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdZZXMnCmNvZGUgIk5vIjogJ25vJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ05vJwpjb2RlICJVbmtub3duIjogJ0VtQ2FyZS5BLkRFMzMnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnVW5rbm93bicKY29kZSAiQ29uZmlybSI6ICdhZ3JlZScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdDb25maXJtJwpjb2RlICJSZWplY3QiOiAnZGlzYWdyZWUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnUmVqZWN0Jwpjb2RlICJJbml0aWFsIHZpc2l0IjogJ0VtQ2FyZS5CMy5ERTA3JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0luaXRpYWwgdmlzaXQnCmNvZGUgIkZvbGxvdyBVcCI6ICdFbUNhcmUuQjMuREUwOCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdGb2xsb3cgVXAnCmNvZGUgIkxlc3MgdGhhbiA3IGRheXMiOiAnRW1DYXJlLkIxMlMxLkRFMDQnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTGVzcyB0aGFuIDcgZGF5cycKY29kZSAiNyBEYXlzIG9yIG1vcmUiOiAnRW1DYXJlLkIxMlMxLkRFMDUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnNyBEYXlzIG9yIG1vcmUnCmNvZGUgIkxlc3MgdGhhbiAxNCBkYXlzIjogJ0VtQ2FyZS5CMTBTMS5ERTA3JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0xlc3MgdGhhbiAxNCBkYXlzJwpjb2RlICIxNCBkYXlzIG9yIG1vcmUiOiAnRW1DYXJlLkIxMFMxLkRFMDgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnMTQgZGF5cyBvciBtb3JlJwpjb2RlICJPeHlnZW4gc2F0dXJhdGlvbiBub3QgbWVhc3VyZWQiOiAnRW1DYXJlLkIxMFMyLkRFMDknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnT3h5Z2VuIHNhdHVyYXRpb24gbm90IG1lYXN1cmVkJwpjb2RlICJUd28gb3IgbW9yZSBjb252dWxzaW9ucyI6ICdFbUNhcmUuQjcuREUwNicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdUd28gb3IgbW9yZSBjb252dWxzaW9ucycKY29kZSAiT25lIENvbnZ1bHNpb24iOiAnRW1DYXJlLkI3LkRFMDUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnT25lIENvbnZ1bHNpb24nCmNvZGUgIkxvdyI6ICdMb3cnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTG93Jwpjb2RlICJOb3JtYWwiOiAnTm9ybWFsJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ05vcm1hbCcKY29kZSAiSGlnaCI6ICdIaWdoJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0hpZ2gnCmNvZGUgIlZlcnkgSGlnaCI6ICdWZXJ5IEhpZ2gnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnVmVyeSBIaWdoJwpjb2RlICJTdWZmaWNpZW50IHJlcGxhY2VtZW50IGZlZWRzIjogJ0VtQ2FyZS5CMjFTMi5ERTE2JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1N1ZmZpY2llbnQgcmVwbGFjZW1lbnQgZmVlZHMnCmNvZGUgIkluc3VmZmljaWVudCByZXBsYWNlbWVudCBmZWVkcyI6ICdFbUNhcmUuQjIxUzIuREUxNycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdJbnN1ZmZpY2llbnQgcmVwbGFjZW1lbnQgZmVlZHMnCmNvZGUgIlNraW4gUGluY2ggZ29lcyBiYWNrIHZlcnkgc2xvd2x5IChNb3JlIHRoYW4gMiBzZWNvbmRzKSI6ICdFbUNhcmUuQjIwUzIuREUwMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTa2luIFBpbmNoIGdvZXMgYmFjayB2ZXJ5IHNsb3dseSAoTW9yZSB0aGFuIDIgc2Vjb25kcyknCmNvZGUgIlNraW4gUGluY2ggZ29lcyBiYWNrIHNsb3dseSAoMiBzZWNvbmRzIG9yIGZld2VyLCBidXQgbm90IGltbWVkaWF0ZWx5KSI6ICdFbUNhcmUuQjIwUzIuREUwNCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTa2luIFBpbmNoIGdvZXMgYmFjayBzbG93bHkgKDIgc2Vjb25kcyBvciBmZXdlciwgYnV0IG5vdCBpbW1lZGlhdGVseSknCmNvZGUgIlNraW4gUGluY2ggZ29lcyBiYWNrIE5vcm1hbGx5IChpbW1lZGlhdGVseSkiOiAnRW1DYXJlLkIyMFMyLkRFMDUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnU2tpbiBQaW5jaCBnb2VzIGJhY2sgTm9ybWFsbHkgKGltbWVkaWF0ZWx5KScKY29kZSAiTW91dGggU29yZXMgb3IgTW91dGggVWxjZXJzIC0gRGVlcCBhbmQgRXh0ZW5zaXZlIjogJ0VtQ2FyZS5CMTRTMi5ERTQxJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ01vdXRoIFNvcmVzIG9yIE1vdXRoIFVsY2VycyAtIERlZXAgYW5kIEV4dGVuc2l2ZScKY29kZSAiTW91dGggU29yZXMgb3IgTW91dGggVWxjZXJzIC0gTm90IERlZXAgYW5kIEV4dGVuc2l2ZSI6ICdFbUNhcmUuQjE0UzIuREU0MicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdNb3V0aCBTb3JlcyBvciBNb3V0aCBVbGNlcnMgLSBOb3QgRGVlcCBhbmQgRXh0ZW5zaXZlJwpjb2RlICJPcmFsIFRocnVzaCI6ICdFbUNhcmUuQjE0UzIuREU0MCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdPcmFsIFRocnVzaCcKY29kZSAiTm8gT3JhbCBTb3JlcyBvciBNb3V0aCBVbGNlcnMiOiAnRW1DYXJlLkIxNFMyLkRFMzknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8gT3JhbCBTb3JlcyBvciBNb3V0aCBVbGNlcnMnCmNvZGUgIk5vIC0gRG8gbm90IGFkZCBhIFNraW4gb3IgTW91dGggb3IgRXllIFByb2JsZW0iOiAnRW1DYXJlLkIxNFMyLkRFNDcnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8gLSBEbyBub3QgYWRkIGEgU2tpbiBvciBNb3V0aCBvciBFeWUgUHJvYmxlbScKY29kZSAiU2V2ZXJlIFBhbG1hciBQYWxsb3IiOiAnRW1DYXJlLkIxNVMyLkRFMDInIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnU2V2ZXJlIFBhbG1hciBQYWxsb3InCmNvZGUgIlNvbWUgUGFsbWFyIFBhbGxvciI6ICdFbUNhcmUuQjE1UzIuREUwMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTb21lIFBhbG1hciBQYWxsb3InCmNvZGUgIk5vIFBhbG1hciBQYWxsb3IiOiAnRW1DYXJlLkIxNVMyLkRFMDQnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8gUGFsbWFyIFBhbGxvcicKY29kZSAiTm90IEFibGUgdG8gRmVlZCBBdCBBbGwiOiAnRW1DYXJlLkIxOFMxLkRFMDMnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm90IEFibGUgdG8gRmVlZCBBdCBBbGwnCmNvZGUgIk5vdCBGZWVkaW5nIFdlbGwiOiAnRW1DYXJlLkIxOFMxLkRFMDQnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm90IEZlZWRpbmcgV2VsbCcKY29kZSAiRmVlZGluZyBXZWxsIjogJ0VtQ2FyZS5CMThTMS5ERTA1JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0ZlZWRpbmcgV2VsbCcKY29kZSAiTW92ZXMgb24gaGlzIG9yIGhlciBvd24gb3IgbW92ZXMgc3BvbnRhbmVvdXNseSBvciB3aXRob3V0IHN0aW11bGF0aW9uIjogJ0VtQ2FyZS5CMThTMi5ERTExJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ01vdmVzIG9uIGhpcyBvciBoZXIgb3duIG9yIG1vdmVzIHNwb250YW5lb3VzbHkgb3Igd2l0aG91dCBzdGltdWxhdGlvbicKY29kZSAiTW92ZW1lbnQgb25seSB3aGVuIHN0aW11bGF0ZWQgYnV0IHRoZW4gc3RvcHMiOiAnRW1DYXJlLkIxOFMyLkRFMTAnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTW92ZW1lbnQgb25seSB3aGVuIHN0aW11bGF0ZWQgYnV0IHRoZW4gc3RvcHMnCmNvZGUgIk5vIG1vdmVtZW50IGF0IGFsbCI6ICdFbUNhcmUuQjE4UzIuREUwOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyBtb3ZlbWVudCBhdCBhbGwnCmNvZGUgIldpdGhpbiBsZXNzIHRoYW4gMjQgaG91cnMgb2YgYmlydGgiOiAnRW1DYXJlLkIxOVMyLkRFMDUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnV2l0aGluIGxlc3MgdGhhbiAyNCBob3VycyBvZiBiaXJ0aCcKY29kZSAiMjQgaG91cnMgb3IgbW9yZSBhZnRlciBiaXJ0aCI6ICdFbUNhcmUuQjE5UzIuREUwNicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICcyNCBob3VycyBvciBtb3JlIGFmdGVyIGJpcnRoJwpjb2RlICJVbmtub3duIHdoZW4gSmF1bmRpY2UgZmlyc3QgYXBwZWFyZWQiOiAnRW1DYXJlLkIxOVMyLkRFMDcnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnVW5rbm93biB3aGVuIEphdW5kaWNlIGZpcnN0IGFwcGVhcmVkJwpjb2RlICJWZXJ5IExvdyBXZWlnaHQgZm9yIEFnZSI6ICdFbUNhcmUuQjIxUzIuREUwMicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdWZXJ5IExvdyBXZWlnaHQgZm9yIEFnZScKY29kZSAiTG93IFdlaWdodCBmb3IgQWdlIjogJ0VtQ2FyZS5CMjFTMi5ERTAzJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0xvdyBXZWlnaHQgZm9yIEFnZScKY29kZSAiTm9ybWFsIFdlaWdodCBmb3IgQWdlIjogJ0VtQ2FyZS5CMjFTMi5ERTA0JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ05vcm1hbCBXZWlnaHQgZm9yIEFnZScKY29kZSAiQnJlYXN0bWlsayBhbHNvIGdpdmVuIjogJ0VtQ2FyZS5CMjFTMi5ERTI4JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0JyZWFzdG1pbGsgYWxzbyBnaXZlbicKY29kZSAiTm8gQnJlYXN0bWlsayBhdCBhbGwiOiAnRW1DYXJlLkIyMVMyLkRFMjknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8gQnJlYXN0bWlsayBhdCBhbGwnCmNvZGUgIkluYXBwcm9wcmlhdGUgcmVwbGFjZW1lbnQgbWlsayI6ICdFbUNhcmUuQjIxUzIuREUxMScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdJbmFwcHJvcHJpYXRlIHJlcGxhY2VtZW50IG1pbGsnCmNvZGUgIkFwcHJvcHJpYXRlIHJlcGxhY2VtZW50IG1pbGsiOiAnRW1DYXJlLkIyMVMyLkRFMTAnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnQXBwcm9wcmlhdGUgcmVwbGFjZW1lbnQgbWlsaycKY29kZSAiRW5kIGNvbnN1bHRhdGlvbiI6ICdFbUNhcmUuQjctQjgtQjkuREUwMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdFbmQgY29uc3VsdGF0aW9uJwpjb2RlICJTdGFiaWxpc2VkLCBjb250aW51ZSBjb25zdWx0YXRpb24iOiAnRW1DYXJlLkI3LUI4LUI5LkRFMDInIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnU3RhYmlsaXNlZCwgY29udGludWUgY29uc3VsdGF0aW9uJwpjb2RlICJNb3RoZXIgSElWIFBvc2l0aXZlIjogJ0VtQ2FyZS5CMjFTMS5ERTAyJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ01vdGhlciBISVYgUG9zaXRpdmUnCmNvZGUgIk1vdGhlciBISVYgTmVnYXRpdmUiOiAnRW1DYXJlLkIyMVMxLkRFMDMnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTW90aGVyIEhJViBOZWdhdGl2ZScKY29kZSAiTW90aGVyIEhJViBTdGF0dXMgLSBVbmtub3duIG9yIE5vdCBUZXN0ZWQiOiAnRW1DYXJlLkIyMVMxLkRFMDQnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTW90aGVyIEhJViBTdGF0dXMgLSBVbmtub3duIG9yIE5vdCBUZXN0ZWQnCmNvZGUgIk1vdGhlciBISVYgU3RhdHVzIC0gRGVjbGluZSB0byBhbnN3ZXIiOiAnRW1DYXJlLkIyMVMxLkRFMDUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTW90aGVyIEhJViBTdGF0dXMgLSBEZWNsaW5lIHRvIGFuc3dlcicKY29kZSAiQ29ycmVjdCBhbmQgaHlnaWVuaWMgZmVlZCBwcmVwYXJhdGlvbiI6ICdFbUNhcmUuQjIxUzIuREUxOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdDb3JyZWN0IGFuZCBoeWdpZW5pYyBmZWVkIHByZXBhcmF0aW9uJwpjb2RlICJJbmNvcnJlY3Qgb3IgdW5oeWdpZW5pYyBmZWVkIHByZXBhcmF0aW9uIjogJ0VtQ2FyZS5CMjFTMi5ERTIwJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0luY29ycmVjdCBvciB1bmh5Z2llbmljIGZlZWQgcHJlcGFyYXRpb24nCmNvZGUgIkN1cCI6ICdFbUNhcmUuQjIxUzIuREUyMicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdDdXAnCmNvZGUgIkJvdHRsZSI6ICdFbUNhcmUuQjIxUzIuREUyMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdCb3R0bGUnCmNvZGUgIkZlZWRpbmcgdXRlbnNpbHMgbm90IGNsZWFuZWQgaHlnaWVuaWNhbGx5IjogJ0VtQ2FyZS5CMjFTMi5ERTI2JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0ZlZWRpbmcgdXRlbnNpbHMgbm90IGNsZWFuZWQgaHlnaWVuaWNhbGx5Jwpjb2RlICJGZWVkaW5nIHV0ZW5zaWxzIGNsZWFuZWQgaHlnaWVuaWNhbGx5IjogJ0VtQ2FyZS5CMjFTMi5ERTI1JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0ZlZWRpbmcgdXRlbnNpbHMgY2xlYW5lZCBoeWdpZW5pY2FsbHknCmNvZGUgIlllcywgRGF0ZSBkb2N1bWVudGVkLCBidXQgbm90IGhlcmUiOiAnRW1DYXJlLkIxNy5ERTA2JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1llcywgRGF0ZSBkb2N1bWVudGVkLCBidXQgbm90IGhlcmUnCmNvZGUgIk5vLCBidXQgbGFzdCBkb3NlIGdpdmVuIGxlc3MgdGhhbiAxIG1vbnRoIGFnbyI6ICdFbUNhcmUuQjE3LkRFMDcnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8sIGJ1dCBsYXN0IGRvc2UgZ2l2ZW4gbGVzcyB0aGFuIDEgbW9udGggYWdvJwpjb2RlICJObywgYnV0IGxhc3QgZG9zZSBnaXZlbiBiZXR3ZWVuIDEgYW5kIDYgbW9udGhzIGFnbyI6ICdFbUNhcmUuQjE3LkRFMDgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8sIGJ1dCBsYXN0IGRvc2UgZ2l2ZW4gYmV0d2VlbiAxIGFuZCA2IG1vbnRocyBhZ28nCmNvZGUgIk5vLCBidXQgbGFzdCBkb3NlIGdpdmVuIG1vcmUgdGhhbiA2IG1vbnRocyBhZ28iOiAnRW1DYXJlLkIxNy5ERTA5JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ05vLCBidXQgbGFzdCBkb3NlIGdpdmVuIG1vcmUgdGhhbiA2IG1vbnRocyBhZ28nCmNvZGUgIk5vLCBEbyBub3Qga25vdyB3aGVuIGxhc3QgZG9zZSB3YXMgZ2l2ZW4iOiAnRW1DYXJlLkIxNy5ERTEwJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ05vLCBEbyBub3Qga25vdyB3aGVuIGxhc3QgZG9zZSB3YXMgZ2l2ZW4nCmNvZGUgIkhpZ2ggSElWIFJpc2siOiAnRW1DYXJlLkIxNy5ERTIzJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0hpZ2ggSElWIFJpc2snCmNvZGUgIkxvdyBISVYgUmlzayI6ICdFbUNhcmUuQjE3LkRFMjQnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTG93IEhJViBSaXNrJwpjb2RlICJDaGlsZCBISVYgUG9zaXRpdmUgLSBWaXJvbG9naWNhbCI6ICdFbUNhcmUuQjE3LkRFMzEnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnQ2hpbGQgSElWIFBvc2l0aXZlIC0gVmlyb2xvZ2ljYWwnCmNvZGUgIkNoaWxkIEhJViBQb3NpdGl2ZSAtIFNlcm9sb2dpY2FsIjogJ0VtQ2FyZS5CMTcuREUzMicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdDaGlsZCBISVYgUG9zaXRpdmUgLSBTZXJvbG9naWNhbCcKY29kZSAiQ2hpbGQgSElWIFBvc2l0aXZlIC0gVW5rbm93biBUeXBlIG9mIFRlc3QiOiAnRW1DYXJlLkIxNy5ERTMzJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0NoaWxkIEhJViBQb3NpdGl2ZSAtIFVua25vd24gVHlwZSBvZiBUZXN0Jwpjb2RlICJDaGlsZCBISVYgTmVnYXRpdmUiOiAnRW1DYXJlLkIxNy5ERTM0JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0NoaWxkIEhJViBOZWdhdGl2ZScKY29kZSAiQ2hpbGQgSElWIFN0YXR1cyAtIFVua25vd24gb3IgTm90IFRlc3RlZCI6ICdFbUNhcmUuQjE3LkRFMzUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnQ2hpbGQgSElWIFN0YXR1cyAtIFVua25vd24gb3IgTm90IFRlc3RlZCcKY29kZSAiQ2hpbGQgSElWIFN0YXR1cyAtIERlY2xpbmUgdG8gYW5zd2VyIjogJ0VtQ2FyZS5CMTcuREUzNicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdDaGlsZCBISVYgU3RhdHVzIC0gRGVjbGluZSB0byBhbnN3ZXInCmNvZGUgIk5vLCBpbmNvbXBsZXRlIHZhY2NpbmF0aW9uIjogJ0VtQ2FyZS5CMTcuREU0NycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObywgaW5jb21wbGV0ZSB2YWNjaW5hdGlvbicKY29kZSAiTm8sIHRoZSBjaGlsZCBoYXMgbmV2ZXIgcmVjZWl2ZWQgYW55IHZhY2NpbmF0aW9ucyB0byBkYXRlIjogJ0VtQ2FyZS5CMTcuREU0OCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObywgdGhlIGNoaWxkIGhhcyBuZXZlciByZWNlaXZlZCBhbnkgdmFjY2luYXRpb25zIHRvIGRhdGUnCmNvZGUgIkJDRyI6ICdFbUNhcmUuQjE3LkRFNTEnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnQkNHJwpjb2RlICJPUFYiOiAnRW1DYXJlLkIxNy5ERTUyJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ09QVicKY29kZSAiSGVwIEIiOiAnRW1DYXJlLkIxNy5ERTUzJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0hlcCBCJwpjb2RlICJEUFQiOiAnRW1DYXJlLkIxNy5ERTU0JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0RQVCcKY29kZSAiRFBUIDE4IG1vbnRoIGJvb3N0ZXIiOiAnRW1DYXJlLkIxNy5ERTU1JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0RQVCAxOCBtb250aCBib29zdGVyJwpjb2RlICJISUIiOiAnRW1DYXJlLkIxNy5ERTU2JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0hJQicKY29kZSAiUlRWIjogJ0VtQ2FyZS5CMTcuREU1NycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdSVFYnCmNvZGUgIlBDViI6ICdFbUNhcmUuQjE3LkRFNTgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnUENWJwpjb2RlICJQQ1YgQm9vc3RlciAxIGZvciBDb25maXJtZWQgSElWIEluZmVjdGlvbiI6ICdFbUNhcmUuQjE3LkRFNTknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnUENWIEJvb3N0ZXIgMSBmb3IgQ29uZmlybWVkIEhJViBJbmZlY3Rpb24nCmNvZGUgIlBDViBCb29zdGVyIDIgZm9yIENvbmZpcm1lZCBISVYgSW5mZWN0aW9uIjogJ0VtQ2FyZS5CMTcuREU2MCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdQQ1YgQm9vc3RlciAyIGZvciBDb25maXJtZWQgSElWIEluZmVjdGlvbicKY29kZSAiTWVhc2xlcyI6ICdFbUNhcmUuQjE3LkRFNjEnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTWVhc2xlcycKY29kZSAiQ29tcGxldGVseSBVbmFibGUgdG8gRHJpbmsiOiAnRW1DYXJlLkIyMi5ERTA5JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0NvbXBsZXRlbHkgVW5hYmxlIHRvIERyaW5rJwpjb2RlICJWb21pdHMgSW1tZWRpYXRlbHkgLyBFdmVyeXRoaW5nIjogJ0VtQ2FyZS5CMjIuREUxMCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdWb21pdHMgSW1tZWRpYXRlbHkgLyBFdmVyeXRoaW5nJwpjb2RlICJEcmlua3MgUG9vcmx5IjogJ0VtQ2FyZS5CMjIuREUxMScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdEcmlua3MgUG9vcmx5Jwpjb2RlICJEcmlua3MgRWFnZXJseSAvIFRoaXJzdGlseSI6ICdFbUNhcmUuQjIyLkRFMTInIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnRHJpbmtzIEVhZ2VybHkgLyBUaGlyc3RpbHknCmNvZGUgIkRyaW5rcyBOb3JtYWxseSI6ICdFbUNhcmUuQjIyLkRFMTMnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnRHJpbmtzIE5vcm1hbGx5Jwpjb2RlICJBYmxlIHRvIGZpbmlzaCBSVVRGIjogJ0VtQ2FyZS5CMjIuREUyNCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdBYmxlIHRvIGZpbmlzaCBSVVRGJwpjb2RlICJVbmFibGUgdG8gZmluaXNoIFJVVEYiOiAnRW1DYXJlLkIyMi5ERTI1JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1VuYWJsZSB0byBmaW5pc2ggUlVURicKY29kZSAiUlVURiBOb3QgQXZhaWxhYmxlIjogJ0VtQ2FyZS5CMjIuREUyNicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdSVVRGIE5vdCBBdmFpbGFibGUnCmNvZGUgIk5vdCB3ZWxsIEF0dGFjaGVkIHRvIEJyZWFzdCI6ICdFbUNhcmUuQjIyLkRFMzcnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm90IHdlbGwgQXR0YWNoZWQgdG8gQnJlYXN0Jwpjb2RlICJHb29kIEF0dGFjaG1lbnQiOiAnRW1DYXJlLkIyMi5ERTM4JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0dvb2QgQXR0YWNobWVudCcKY29kZSAiTm90IFN1Y2tpbmcgRWZmZWN0aXZlbHkiOiAnRW1DYXJlLkIyMi5ERTM5JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ05vdCBTdWNraW5nIEVmZmVjdGl2ZWx5Jwpjb2RlICJTdWNraW5nIEVmZmVjdGl2ZWx5IjogJ0VtQ2FyZS5CMjIuREU0MCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTdWNraW5nIEVmZmVjdGl2ZWx5Jwpjb2RlICJObyBTcGVjaWVzIFJlcG9ydGVkIjogJ0VtQ2FyZS5CMjIuREU3NScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyBTcGVjaWVzIFJlcG9ydGVkJwpjb2RlICJOb25lIG9mIHRoZSBsaXN0ZWQgdGhyb2F0IHByb2JsZW1zIG9ic2VydmVkIjogJ25vbmUnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm9uZSBvZiB0aGUgbGlzdGVkIHRocm9hdCBwcm9ibGVtcyBvYnNlcnZlZCcKY29kZSAiWWVzLCB3aXRob3V0IGRpZmZpY3VsdHkiOiAnRW1DYXJlLkIxN1MxLkRFMDgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnWWVzLCB3aXRob3V0IGRpZmZpY3VsdHknCmNvZGUgIkRpZmZpY3VsdHkgaW4gc3dhbGxvd2luZyI6ICdFbUNhcmUuQjE3UzEuREUwOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdEaWZmaWN1bHR5IGluIHN3YWxsb3dpbmcnCmNvZGUgIlVuYWJsZSB0byBzd2FsbG93IjogJ0VtQ2FyZS5CMTdTMS5ERTEwJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1VuYWJsZSB0byBzd2FsbG93Jwpjb2RlICJUaGUgY2hpbGQgaXMgdmlzdWFsbHkgYXNzZXNzZWQgZm9yIHdoZXRoZXIgdW5kZXJ3ZWlnaHQgYnkgdGhlIGhlYWx0aCBjYXJlIHdvcmtlciBhbmQgZG9lcyBub3QgYXBwZWFyIHRvIGJlIHVuZGVyd2VpZ2h0IChlc3RpbWF0ZWQgd2VpZ2h0IGJhc2VkIG9uIGhlaWdodCBvciBhZ2Ugd291bGQgYmUgZXF1aXZhbGVudCB0byBXSFo9IDAgLyBXQVo9IDApCihmb3IgZHJ1ZyBkb3NpbmcgY2FsY3VsYXRpb25zKSI6ICdFbUNhcmUuQjYuREUxOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdUaGUgY2hpbGQgaXMgdmlzdWFsbHkgYXNzZXNzZWQgZm9yIHdoZXRoZXIgdW5kZXJ3ZWlnaHQgYnkgdGhlIGhlYWx0aCBjYXJlIHdvcmtlciBhbmQgZG9lcyBub3QgYXBwZWFyIHRvIGJlIHVuZGVyd2VpZ2h0IChlc3RpbWF0ZWQgd2VpZ2h0IGJhc2VkIG9uIGhlaWdodCBvciBhZ2Ugd291bGQgYmUgZXF1aXZhbGVudCB0byBXSFo9IDAgLyBXQVo9IDApCihmb3IgZHJ1ZyBkb3NpbmcgY2FsY3VsYXRpb25zKScKY29kZSAiVGhlIGNoaWxkIGlzIHZpc3VhbGx5IGFzc2Vzc2VkIGZvciB3aGV0aGVyIHVuZGVyd2VpZ2h0IGJ5IHRoZSBoZWFsdGggY2FyZSB3b3JrZXIgYW5kIGFwcGVhcnMgdG8gYmUgdW5kZXJ3ZWlnaHQgKGFzIGFuIGFpZGUgZm9yIGRvc2luZyBjYWxjdWxhdGlvbnMpIChlc3RpbWF0ZWQgd2VpZ2h0IGJhc2VkIG9uIGhlaWdodCBvciBhZ2Ugd291bGQgYmUgZXF1aXZhbGVudCB0byBXSFo9IC0xIC8gV0FaPSAtMSkKKGZvciBkcnVnIGRvc2luZyBjYWxjdWxhdGlvbnMpIjogJ0VtQ2FyZS5CNi5ERTIwJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1RoZSBjaGlsZCBpcyB2aXN1YWxseSBhc3Nlc3NlZCBmb3Igd2hldGhlciB1bmRlcndlaWdodCBieSB0aGUgaGVhbHRoIGNhcmUgd29ya2VyIGFuZCBhcHBlYXJzIHRvIGJlIHVuZGVyd2VpZ2h0IChhcyBhbiBhaWRlIGZvciBkb3NpbmcgY2FsY3VsYXRpb25zKSAoZXN0aW1hdGVkIHdlaWdodCBiYXNlZCBvbiBoZWlnaHQgb3IgYWdlIHdvdWxkIGJlIGVxdWl2YWxlbnQgdG8gV0haPSAtMSAvIFdBWj0gLTEpCihmb3IgZHJ1ZyBkb3NpbmcgY2FsY3VsYXRpb25zKScKY29kZSAiVGhlIGNoaWxkIGlzIHZpc3VhbGx5IGFzc2Vzc2VkIGZvciB3aGV0aGVyIHVuZGVyd2VpZ2h0IGFuZCBhcHBlYXJzIHRvIGJlIHNldmVyZWx5IHVuZGVyd2VpZ2h0IChhcyBhbiBhaWRlIGZvciBkb3NpbmcgY2FsY3VsYXRpb25zKSAoZXN0aW1hdGVkIHdlaWdodCBiYXNlZCBvbiBoZWlnaHQgb3IgYWdlIHdvdWxkIGJlIGVxdWl2YWxlbnQgdG8gV0haPSAtMiAvIFdBWj0gLTIpCihmb3IgZHJ1ZyBkb3NpbmcgY2FsY3VsYXRpb25zKSI6ICdFbUNhcmUuQjYuREUyMScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdUaGUgY2hpbGQgaXMgdmlzdWFsbHkgYXNzZXNzZWQgZm9yIHdoZXRoZXIgdW5kZXJ3ZWlnaHQgYW5kIGFwcGVhcnMgdG8gYmUgc2V2ZXJlbHkgdW5kZXJ3ZWlnaHQgKGFzIGFuIGFpZGUgZm9yIGRvc2luZyBjYWxjdWxhdGlvbnMpIChlc3RpbWF0ZWQgd2VpZ2h0IGJhc2VkIG9uIGhlaWdodCBvciBhZ2Ugd291bGQgYmUgZXF1aXZhbGVudCB0byBXSFo9IC0yIC8gV0FaPSAtMikKKGZvciBkcnVnIGRvc2luZyBjYWxjdWxhdGlvbnMpJwpjb2RlICJTZXZlcmUgbXVjb3VzIG1lbWJyYW5lIHBhbGxvciI6ICdFbUNhcmUuQjE1UzIuREUxMCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTZXZlcmUgbXVjb3VzIG1lbWJyYW5lIHBhbGxvcicKY29kZSAiU29tZSBtdWNvdXMgbWVtYnJhbmUgcGFsbG9yIjogJ0VtQ2FyZS5CMTVTMi5ERTExJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1NvbWUgbXVjb3VzIG1lbWJyYW5lIHBhbGxvcicKY29kZSAiTm8gbXVjb3VzIG1lbWJyYW5lIHBhbGxvciI6ICdFbUNhcmUuQjE1UzIuREUxMicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyBtdWNvdXMgbWVtYnJhbmUgcGFsbG9yJwpjb2RlICJZZXMgLSBWaXRhbWluIEEgcmVjZWl2ZWQgaW4gdGhlIGxhc3QgbW9udGgiOiAnRW1DYXJlLkMxLlBDLkRFMDcnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnWWVzIC0gVml0YW1pbiBBIHJlY2VpdmVkIGluIHRoZSBsYXN0IG1vbnRoJwpjb2RlICJObyBWaXRhbWluIEEgcmVjZWl2ZWQgaW4gdGhlIGxhc3QgbW9udGgiOiAnRW1DYXJlLkMxLlBDLkRFMDgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8gVml0YW1pbiBBIHJlY2VpdmVkIGluIHRoZSBsYXN0IG1vbnRoJwo="
          }
        ]
      }
  },{
    "resource":{
      "resourceType": "Library",
      "id": "emcareobservation",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation",
      "version": "1.0.3.build.182",
      "name": "emcareobservation",
      "status": "active",
      "type": {
        "coding": [
          {
            "system": "http://hl7.org/fhir/ValueSet/library-type",
            "code": "logic-library"
          }
        ]
      },
      "relatedArtifact": [
        {
          "type": "depends-on",
          "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
      ],
      "content": [
        {
          "id": "ig-loader-emcareobservation.cql",
          "contentType": "text/cql",
          "data": ""
        }
      ]
    }
  },{
    "resource":{
      "resourceType": "Library",
      "id": "emcareobservationvalueset",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservationvalueset",
      "version": "1.0.3.build.182",
      "name": "emcareobservationValueset",
      "status": "active",
      "type": {
        "coding": [
          {
            "system": "http://hl7.org/fhir/ValueSet/library-type",
            "code": "logic-library"
          }
        ]
      },
      "relatedArtifact": [
        {
          "type": "depends-on",
          "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
      ],
      "content": [
        {
          "id": "ig-loader-emcareobservationValueset.cql",
          "contentType": "text/cql",
          "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZW9ic2VydmF0aW9uVmFsdWVzZXQgdmVyc2lvbiAnMS4wLjMuYnVpbGQuMTgyJwp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMgCgoKCgpjb2Rlc3lzdGVtICJFbUNhcmUiIDogJ2h0dHBzOi8vZmhpci5kay5zd2lzc3RwaC1taXMuY2gvbWF0Y2hib3gvZmhpci9Db2RlU3lzdGVtL2VtY2FyZS1jdXN0b20tY29kZXMnCgoKY29kZSAiR2VuZXJhbGlzZWQgU2tpbiBQcm9ibGVtIjogJ0VtQ2FyZS5CMTRTMi5ERTA3JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0dlbmVyYWxpc2VkIFNraW4gUHJvYmxlbScKY29kZSAiTG9jYWxpc2VkIFNraW4gUHJvYmxlbSI6ICdFbUNhcmUuQjE0UzIuREUwOCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdMb2NhbGlzZWQgU2tpbiBQcm9ibGVtJwpjb2RlICJObyBQcm9ibGVtIjogJ0VtQ2FyZS5CMTRTMi5ERTA5JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ05vIFByb2JsZW0nCmNvZGUgIlVuY29uc2Npb3VzIjogJ0VtQ2FyZS5CNy5ERTA4JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1VuY29uc2Npb3VzJwpjb2RlICJMZXRoYXJnaWMiOiAnRW1DYXJlLkI3LkRFMDhhJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0xldGhhcmdpYycKY29kZSAiUmVkIChjb25nZXN0ZWQpIHRocm9hdCI6ICdFbUNhcmUuQjE3UzEuREUwMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdSZWQgKGNvbmdlc3RlZCkgdGhyb2F0Jwpjb2RlICJFeHVkYXRlIG9uIFRocm9hdCI6ICdFbUNhcmUuQjE3UzEuREUwNCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdFeHVkYXRlIG9uIFRocm9hdCcKY29kZSAiTWVtYnJhbmUgb24gdGhyb2F0IjogJ0VtQ2FyZS5CMTdTMS5ERTA1JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ01lbWJyYW5lIG9uIHRocm9hdCcK"
        }
      ]
    }
  },{
    "resource":{
      "resourceType": "Library",
      "id": "emcarecombineddataelements",
      "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements",
      "identifier": [
        {
          "use": "official",
          "value": "emcare.combineddataelements"
        }
      ],
      "version": "1.0.3.build.182",
      "name": "emcarecombineddataelements",
      "title": "EmCare.CombinedDataElements",
      "status": "active",
      "type": {
        "coding": [
          {
            "system": "http://hl7.org/fhir/ValueSet/library-type",
            "code": "logic-library"
          }
        ]
      },
      "relatedArtifact": [
        {
          "type": "depends-on",
          "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
          "type": "depends-on",
          "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        }
      ],
      "parameter": [
        {
          "name": "child",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Age >= 2 months to <60 months",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "yi",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Age >=28 days to 2 Months",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "vyi",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Age < 28 days",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "nb",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "nnb",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCare.B.G.DE01",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Danger Signs",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCare.B.G.DE05",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "Severe Classification up to assessments and tests excluding Severe Dehydration",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL1-23-30",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL1-23-30b",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL1-29",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-I-CL1-30",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-I-CL1-23",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL2-18-03",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL2-18",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-I-CL2-01",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL1-24-32",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL2-19",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-G-CL1-24-32b",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-I-CL1-31",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "DL-I-CL1-32",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "PSBI other than temperature",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "PSBI",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "PSBI-2",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "YI severe classification other than Severe Dehydration",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "YI severe classification",
          "use": "out",
          "type": "boolean"
        },
        {
          "name": "EmCare.B12S1.DE01",
          "use": "out",
          "type": "boolean"
        }
      ],
      "content": [
        {
          "id": "ig-loader-emcarecombineddataelements.cql",
          "contentType": "text/cql",
          "data": ""
        }
      ]
    }
  } ]
}